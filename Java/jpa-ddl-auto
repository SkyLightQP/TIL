# JPA ddl-auto

Spring에서 JPA를 사용할 때 데이터베이스 스키마 마이그레이션 전략을 설정하기 위한 옵션입니다.

`application.yml`에서 아래와 같이 설정할 수 있습니다.

```yaml
spring:
  jpa:
    hibernate:
      ddl-auto: validate # 또는 none, update, create, create-drop
```

MySQL, PostgreSQL에서는 `none`을 기본값으로 사요앟고 H2 같은 인메모리 데이터베이스는 `create-drop`을 기본값으로 사용합니다.

### `none`

스키마와 관련된 어떤 동작도 하지 않습니다.

### `validate`

서버가 시작될 때 JPA Entity 맵핑이 데이터베이스 테이블과 일치하는지 검증합니다. 일치하지 않으면 오류를 발생시킵니다.

프로덕션 환경에서는 `validate`으로 설정하고 Flyway, Liquibase와 같은 스키마 버전 관리 라이브러리를 사용해서 스키마를 관리하고 Spring에서 스키마 검증을 할 수 있습니다.

### `update`

Entity와 스키마를 비교해서 다르다면 스키마를 변경합니다. 기존 데이터가 유지되지만 예상과 다르게 스키마가 변경될 수 있기 때문에 프로덕션에서 권장하지 않습니다.

컬럼 삭제는 수행하지 않고 컬럼명이 변경되면 기존 컬럼을 유지하고 새로운 컬럼을 추가합니다.

### `create`

기존 스키마를 모두 삭제하고 새로 생성합니다. 데이터가 모두 삭제되기 때문에 프로덕션에서 사용하지 않습니다.

### `create-drop`

`create`와 동일하지만 서버가 종료되면 스키마를 삭제합니다. 통합 테스트 등에서 테스트 목적으로 사용됩니다.
